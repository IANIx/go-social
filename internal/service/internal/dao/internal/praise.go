// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PraiseDao is the data access object for table praise.
type PraiseDao struct {
	table   string        // table is the underlying table name of the DAO.
	group   string        // group is the database configuration group name of current DAO.
	columns PraiseColumns // columns contains all the column names of Table for convenient usage.
}

// PraiseColumns defines and stores column names for table praise.
type PraiseColumns struct {
	Id         string // 点赞id
	Uid        string // 点赞用户id
	Aid        string // 文章id
	ToUid      string // 被点赞者用户id
	Type       string // 点赞类型  1:文章点赞 2:评论点赞
	TypeId     string // 对应文章或评论id
	State      string // 点赞状态 1:正常 2:取消
	CreateTime string // 创建时间
	UpdateTime string // 更新时间
}

//  praiseColumns holds the columns for table praise.
var praiseColumns = PraiseColumns{
	Id:         "id",
	Uid:        "uid",
	Aid:        "aid",
	ToUid:      "to_uid",
	Type:       "type",
	TypeId:     "type_id",
	State:      "state",
	CreateTime: "create_time",
	UpdateTime: "update_time",
}

// NewPraiseDao creates and returns a new DAO object for table data access.
func NewPraiseDao() *PraiseDao {
	return &PraiseDao{
		group:   "default",
		table:   "praise",
		columns: praiseColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PraiseDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PraiseDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PraiseDao) Columns() PraiseColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PraiseDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PraiseDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PraiseDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
